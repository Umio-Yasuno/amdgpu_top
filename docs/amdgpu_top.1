'\" t
.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "AMDGPU_TOP" "1" "2023-12-01" "" ""
.hy
.SH NAME
.PP
amdgpu_top - Tool to displays AMDGPU usage.
.SH SYNOPSIS
.PP
\f[I]amdgpu_top\f[R] [\f[I]OPTIONS\f[R]]
.SH DESCRIPTION
.PP
\f[I]amdgpu_top\f[R] is tool that display AMD GPU utilization, like
\f[I]umr\f[R] [1] or \f[I]clbr/radeontop\f[R] [2] or
\f[I]intel_gpu_top\f[R] [3] .
.PD 0
.P
.PD
The tool displays information gathered from performance counters (GRBM,
GRBM2), sensors, fdinfo, and AMDGPU driver.
.SH EXAMPLES
.PP
\f[B]Display a list of AMDGPU devices\f[R]
.IP
.nf
\f[C]
$ amdgpu_top --list
\f[R]
.fi
.PP
\f[B]Dump All GPU processes and memory usage per process\f[R]
.IP
.nf
\f[C]
$ amdgpu_top -p
\f[R]
.fi
.PP
\f[B]Specifies PCI bus\f[R]
.IP
.nf
\f[C]
$ amdgpu_top --pci \[dq]0000:01:00.0\[dq]
\f[R]
.fi
.SH OPTIONS
.TP
\f[B]-i\f[R] \f[I]\f[VI]<usize>\f[I]\f[R]
Select GPU instance.
.TP
\f[B]--pci\f[R] \f[I]\f[VI]<String>\f[I]\f[R]
Specifying PCI path.
(domain:bus:dev.func)
.TP
\f[B]-s\f[R] \f[I]\f[VI]<u64>\f[I]\f[R], \f[B]-s\f[R] \f[I]\f[VI]<u64>ms\f[I]\f[R]
Refresh period (interval) in milliseconds for JSON mode.
(default: 1000ms)
.TP
\f[B]-n\f[R] \f[I]\f[VI]<u32>\f[I]\f[R]
Specifies the maximum number of iteration for JSON mode.
If 0 is specified, it will be an infinite loop.
(default: 0)
.TP
\f[B]-u\f[R] \f[I]\f[VI]<u64>\f[I]\f[R], \f[B]--update-process-index\f[R] \f[I]\f[VI]<u64>\f[I]\f[R]
Update interval in seconds of the process index for fdinfo.
(default: 5s)
.TP
\f[B]--json_fifo\f[R] \f[I]\f[VI]<String>\f[I]\f[R], \f[B]--json-fifo\f[R] \f[I]\f[VI]<String>\f[I]\f[R]
Output JSON formatted data to FIFO (named pipe) for other application
and scripts.
.TP
\f[B]\[en]decode-gm\f[R] \f[I]\f[VI]<Path>\f[I]\f[R], \f[B]\[en]decode-gpu-metrics\f[R] \f[I]\f[VI]<Path>\f[I]\f[R]
Decode the specified gpu_metrics file.
.TP
\f[B]--apu\f[R], \f[B]--select-apu\f[R]
Select APU instance.
.TP
\f[B]--single\f[R], \f[B]--single-gpu\f[R]
Display only the selected GPU/APU.
.TP
\f[B]--no-pc\f[R]
The application does not read the performance counter (GRBM, GRBM2) if
this flag is set.
Reading the performance counter may deactivate the power saving feature
of APU/GPU.
.TP
\f[B]-gm\f[R], \f[B]--gpu_metrics\f[R], \f[B]--gpu-metrics\f[R]
Dump gpu_metrics for all AMD GPUs.
https://www.kernel.org/doc/html/latest/gpu/amdgpu/thermal.html#gpu-metrics
.TP
\f[B]--pp_table\f[R], \f[B]--pp-table\f[R]
Dump pp_table from sysfs and VBIOS for all AMD GPUs.
(only support Navi1x and Navi2x, Navi3x)
.TP
\f[B]--drm_info\f[R], \f[B]--drm-info\f[R]
Dump DRM info.
Inspired by https://gitlab.freedesktop.org/emersion/drm_info
.TP
\f[B]--xdna\f[R]
Dump XDNA NPU info.
.TP
\f[B]--dark\f[R], \f[B]--dark-mode\f[R]
Set to the dark mode.
(TUI/GUI)
.TP
\f[B]--light\f[R], \f[B]--light-mode\f[R]
Set to the light mode.
(TUI/GUI)
.TP
\f[B]--hide-fdinfo\f[R]
Hide fdinfo panel and launch.
(TUI)
.TP
\f[B]--gl\f[R], \f[B]--opengl\f[R]
Use OpenGL API to the GUI backend.
.TP
\f[B]--vk\f[R], \f[B]--vulkan\f[R]
Use Vulkan API to the GUI backend, and use APU/iGPU for GUI rendering if
it is available.
.TP
\f[B]-d\f[R], \f[B]--dump\f[R]
Dump AMDGPU info.
(Specifications, VRAM, PCI, ResizableBAR, VBIOS, Video caps) This option
can be combined with the \[lq]-J\[rq] option.
.TP
\f[B]--list\f[R]
Display a list of AMDGPU devices.
.TP
\f[B]-p\f[R], \f[B]--process\f[R]
Dump All GPU processes and memory usage per process.
.TP
\f[B]-J\f[R], \f[B]--json\f[R]
Output JSON formatted data.
This option can be combined with the \[lq]-d\[rq] option.
.TP
\f[B]--gui\f[R]
Launch GUI mode.
.TP
\f[B]--smi\f[R]
Launch Simple TUI mode.
(like nvidia-smi, rocm-smi)
.TP
\f[B]-V\f[R], \f[B]--version\f[R]
Print version information.
.TP
\f[B]-h\f[R], \f[B]--help\f[R]
Print help information.
.SH COMMANDS FOR TUI MODE
.PP
.TS
tab(@);
l l.
T{
key
T}@T{
T}
_
T{
f
T}@T{
toggle fdinfo
T}
T{
n
T}@T{
toggle Sensors
T}
T{
m
T}@T{
toggle GPU Metrics
T}
T{
h
T}@T{
change update interval (high = 100ms, low = 1000ms)
T}
T{
q
T}@T{
Quit
T}
T{
P
T}@T{
sort fdinfo by pid
T}
T{
M
T}@T{
sort fdinfo by VRAM usage
T}
T{
G
T}@T{
sort fdinfo by GFX usage
T}
T{
M
T}@T{
sort fdinfo by MediaEngine usage
T}
T{
R
T}@T{
reverse sort for fdinfo
T}
.TE
.SH FDINFO DESCRIPTION
.PP
fdinfo for the AMDGPU driver shows hardware IP usage per process.
.SS VRAM
.SS GTT
.PP
Graphics Translation Tables.
.SS KFD
.PP
The process of using the AMDKFD driver.
.SS GFX
.PP
GFX engine.
.SS Compute/COMP
.PP
Compute engine.
.PD 0
.P
.PD
The AMDKFD driver dose not track queues and does not show them in
fdinfo.
.SS DMA
.PP
DMA/SDMA (System DMA) engine.
.SS Decode/DEC
.PP
Media decoder.
.PD 0
.P
.PD
This is not show on RDNA 4.
.SS Encode/ENC
.PP
Media encoder.
.PD 0
.P
.PD
This is not show on RDNA 4.
.SS VCN, Media
.PP
Media engine.
.PD 0
.P
.PD
From VCN4, the encoding queue and decoding queue have been unified.
.PD 0
.P
.PD
The AMDGPU driver handles both decoding and encoding as contexts for the
encoding engine.
.SS JPEG
.PP
JPEG decoder.
.SS VPE
.PP
Video Processor Engine.
.PD 0
.P
.PD
ref:
.PD 0
.P
.PD
<https://gitlab.freedesktop.org/mesa/mesa/-/blob/main/src/amd/vpelib/README.md>
.SH BUGS
.PP
<https://github.com/Umio-Yasuno/amdgpu_top/issues>
.SH NOTES
.SS [1]
.PP
<https://gitlab.freedesktop.org/tomstdenis/umr/>
.SS [2]
.PP
<https://github.com/clbr/radeontop>
.SS [3]
.PP
<https://gitlab.freedesktop.org/drm/igt-gpu-tools/-/blob/master/man/intel_gpu_top.rst>
.SH AUTHORS
Umio Yasuno <coelacanth_dream@protonmail.com>.
